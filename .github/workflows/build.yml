name: CI/CD Workflow for walt.id NFT Kit

on:
  push:
    branches:
      - feat/nearProtocolNFT
  pull_request:
    branches:
      - main

jobs:
  verify-wrapper:
    name: "Verification"
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

  gradle:
    needs: verify-wrapper
    name: "Build"
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup java
      uses: actions/setup-java@v2.1.0
      with:
        distribution: 'adopt-hotspot'
        java-version: '16'
    - name: Running gradle build
      uses: eskatos/gradle-command-action@v1.3.3
      with:
        arguments: build --no-daemon --info
    - name: Grant Permissions to gradlew
      run: chmod +x gradlew
    - name: Test
      run: ./gradlew test --tests "*"

    - name: Test Success
      if: success()
      uses: actions/github-script@0.2.0
      with:
        github-token: ${{ github.token }}
        script: |
            const pull_number = "${{github.event.number}}"
            await github.pulls.createReview({
              ...context.repo,
              pull_number,
              body: "All tests passed.",
              event: "APPROVE"
            })
    - name: Test Fail
      if: failure()
      uses: actions/github-script@0.2.0
      with:
          github-token: ${{ github.token }}
          script: |
            const pull_number = "${{github.event.number}}"
            await github.pulls.createReview({
              ...context.repo,
              pull_number,
              body: "There is something wrong with test codes.",
             event: "REQUEST_CHANGES"
            })
            await github.pulls.update({
              ...context.repo,
              pull_number,
              state: "closed"
            })